/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */

plugins {
    id 'java'
}

task identify {
    println "---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
    println " ,----.                    ,--.            ,--.    ,---.                                    ,------.                                       ,--.                         ,--.                 \n" +
            "'  .-./     ,---.   ,---.  |  |  ,--,--. ,-'  '-. /  .-'  ,---.  ,--.--. ,--,--,--. ,-----. |  .-.  \\   ,---.   ,---.   ,---.  ,--,--,   ,-|  |  ,---.  ,--,--,   ,---. `--'  ,---.   ,---.  \n" +
            "|  | .---. | .-. : | .-. | |  | ' ,-.  | '-.  .-' |  `-, | .-. | |  .--' |        | '-----' |  |  \\  : | .-. : | .-. | | .-. : |      \\ ' .-. | | .-. : |      \\ | .--' ,--. | .-. : (  .-'  \n" +
            "'  '--'  | \\   --. | '-' ' |  | \\ '-'  |   |  |   |  .-' ' '-' ' |  |    |  |  |  |         |  '--'  / \\   --. | '-' ' \\   --. |  ||  | \\ `-' | \\   --. |  ||  | \\ `--. |  | \\   --. .-'  `) \n" +
            " `------'   `----' |  |-'  `--'  `--`--'   `--'   `--'    `---'  `--'    `--`--`--'         `-------'   `----' |  |-'   `----' `--''--'  `---'   `----' `--''--'  `---' `--'  `----' `----' "
    println "---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
    println "Using build file '$buildFile.name' in '$buildFile.parentFile.name'."
    println "Project Name: " + project.name
    println "Version: " + projectVersion
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    jar {
        enabled = onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    }

    group = group
    version = projectVersion

    repositories {
        mavenCentral()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                //from components.java
                pom {
                    inceptionYear = '2011'
                    name = project.name
                    packaging = 'pom'
                    description = project.description

                    scm {
                        connection = 'scm:git:git://github.com/geosdi/geoplatform-dependencies.git'
                        developerConnection = 'scm:git:git@github.com:geosdi/geoplatform-dependencies.git'
                        url = 'https://github.com/geosdi/geoplatform-dependencies.git'
                        tag = '1.8.x'
                    }

                    licenses {
                        license {
                            name = 'GPL v3 + CE'
                            url = 'http://www.gnu.org/licenses/'
                        }
                    }

                    developers {
                        developer {
                            id = 'glascaleia'
                            name = 'Giuseppe Lascaleia'
                            email = 'glascaleia@gmail.com'
                        }
                        developer {
                            id = 'vsalvia'
                            name = 'Vito Salvia'
                            email = 'vito.salvia@gmai.com'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name 'geosdi-repository'
                url = version.endsWith('SNAPSHOT') ? property("snapshot_repository") : property("release_repository")
                credentials {
                    username = property("username") as String
                    password = property("password") as String
                }
            }
        }
    }
}

subprojects {
    tasks.register('printDependencies') {
        dependsOn 'dependencies'
    }
}

gradle.afterProject { project ->
    if (project.state.failure) {
        println "Evaluation of $project FAILED"
    } else {
        println "Evaluation of $project succeeded"
    }
}