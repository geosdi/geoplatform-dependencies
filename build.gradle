/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4/samples
 */

plugins {
    id 'java'
}

task identify {
    println "-----------------------------------------------------------------------------------------------------------------------------------"
    println "  ____                  _       _    __                            ____                            _                 _           \n" +
            "  / ___| ___  ___  _ __ | | __ _| |_ / _| ___  _ __ _ __ ___       |  _ \\  ___ _ __   ___ _ __   __| | ___ _ __   ___(_) ___  ___ \n" +
            " | |  _ / _ \\/ _ \\| '_ \\| |/ _` | __| |_ / _ \\| '__| '_ ` _ \\ _____| | | |/ _ \\ '_ \\ / _ \\ '_ \\ / _` |/ _ \\ '_ \\ / __| |/ _ \\/ __|\n" +
            " | |_| |  __/ (_) | |_) | | (_| | |_|  _| (_) | |  | | | | | |_____| |_| |  __/ |_) |  __/ | | | (_| |  __/ | | | (__| |  __/\\__ \\\n" +
            "  \\____|\\___|\\___/| .__/|_|\\__,_|\\__|_|  \\___/|_|  |_| |_| |_|     |____/ \\___| .__/ \\___|_| |_|\\__,_|\\___|_| |_|\\___|_|\\___||___/\n" +
            "                  |_|                                                         |_|                                                 "
    println "-----------------------------------------------------------------------------------------------------------------------------------"
    println "Using build file '$buildFile.name' in '$buildFile.parentFile.name'."
    println "Project Name: " + project.name
    println "Version: " + projectVersion
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    jar {
        enabled = onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    }

    group = group
    version = projectVersion

    repositories {
        mavenCentral()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                //from components.java
                pom {
                    inceptionYear = '2011'
                    name = project.name
                    packaging = 'pom'
                    description = project.description

                    scm {
                        connection = 'scm:git:git://github.com/geosdi/geoplatform-dependencies.git'
                        developerConnection = 'scm:git:git@github.com:geosdi/geoplatform-dependencies.git'
                        url = 'https://github.com/geosdi/geoplatform-dependencies.git'
                        tag = '1.8.x'
                    }

                    licenses {
                        license {
                            name = 'GPL v3 + CE'
                            url = 'http://www.gnu.org/licenses/'
                        }
                    }

                    developers {
                        developer {
                            id = 'glascaleia'
                            name = 'Giuseppe Lascaleia'
                            email = 'glascaleia@gmail.com'
                        }
                        developer {
                            id = 'vsalvia'
                            name = 'Vito Salvia'
                            email = 'vito.salvia@gmai.com'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name 'geosdi-repository'
                url = version.endsWith('SNAPSHOT') ? geosdi_snapshot_repository : geosdi_release_repository
                credentials {
                    username = geosdi_repo_username
                    password = geosdi_repo_password
                }
            }
        }
    }
}

subprojects {
    tasks.register('printDependencies') {
        dependsOn 'dependencies'
    }
}

gradle.afterProject { project ->
    if (project.state.failure) {
        println "Evaluation of $project FAILED"
    } else {
        println "Evaluation of $project succeeded"
    }
}